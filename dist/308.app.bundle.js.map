{"version":3,"file":"308.app.bundle.js","mappings":"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","sources":["webpack://curso-platzi-react-avanzado/./src/components/HelmetLayout/index.js","webpack://curso-platzi-react-avanzado/./src/components/ListOfPhotoCards/styles.js","webpack://curso-platzi-react-avanzado/./src/components/PageTitle/styles.js","webpack://curso-platzi-react-avanzado/./src/components/PageTitle/index.js","webpack://curso-platzi-react-avanzado/./src/hooks/useMutationToggleLike.js","webpack://curso-platzi-react-avanzado/./src/components/FavButton/styles.js","webpack://curso-platzi-react-avanzado/./src/components/FavButton/index.js","webpack://curso-platzi-react-avanzado/./src/components/PhotoCard/styles.js","webpack://curso-platzi-react-avanzado/./src/components/PhotoCard/index.js","webpack://curso-platzi-react-avanzado/./src/hooks/useNearScreen.js","webpack://curso-platzi-react-avanzado/./src/components/Category/styles.js","webpack://curso-platzi-react-avanzado/./src/components/Category/index.js","webpack://curso-platzi-react-avanzado/./src/components/ListOfCategories/styles.js","webpack://curso-platzi-react-avanzado/./src/components/ListOfCategories/index.js","webpack://curso-platzi-react-avanzado/./src/hooks/useFetch.js","webpack://curso-platzi-react-avanzado/./src/components/ListOfPhotoCards/index.js","webpack://curso-platzi-react-avanzado/./src/hooks/useGetPhotos.js","webpack://curso-platzi-react-avanzado/./src/pages/Home.js"],"sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport const HelmetLayout = ({ children, title, description }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {title && <title>Petgram ğŸ¦Š | {title}</title>}\r\n        {description && <meta name=\"description\" content={description} />}\r\n      </Helmet>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const List = styled.ul`\r\n  width: 80%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  margin-bottom: 1.5rem;\r\n  border-radius: 10px;\r\n  overflow: hidden;\r\n  box-shadow: 0px 10px 14px rgba(0, 0, 0, 0.2);\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n  width: 80%;\r\n  margin: 0 auto .5rem;\r\n`;\r\n","import React from \"react\";\r\nimport { Title } from \"./styles\";\r\n\r\nexport const PageTitle = ({ content }) => {\r\n  return <Title>{content}</Title>;\r\n};\r\n","import { gql, useMutation } from \"@apollo/client\";\r\n\r\nconst LIKE_PHOTO = gql`\r\n  mutation likePhoto($input: LikePhoto!) {\r\n    likePhoto(input: $input) {\r\n      id\r\n      liked\r\n      likes\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useMutationToggleLike = () => {\r\n  const [mutation, { loading: mutationLoading, error: mutationError }] =\r\n    useMutation(LIKE_PHOTO);\r\n  return { mutation, mutationLoading, mutationError };\r\n};\r\n","import styled from \"styled-components\";\r\nimport { MdFavorite } from \"react-icons/md\";\r\nimport { fadeIn } from \"../../styles/animation\";\r\n\r\nexport const Button = styled.button`\r\n  padding-top: 8px;\r\n  display: flex;\r\n  align-items: center;\r\n  & svg {\r\n    margin-right: 4px;\r\n  }\r\n`;\r\n\r\nexport const LikedIcon = styled(MdFavorite)`\r\n  color: #ff277a;\r\n  ${fadeIn({ time: \".2s\" })}\r\n`;\r\n","import React from \"react\";\r\nimport { LikedIcon, Button } from \"./styles\";\r\nimport { GrFavorite } from \"react-icons/gr\";\r\n\r\nexport const FavButton = ({ liked, likes, onClick }) => {\r\n  return (\r\n    <Button onClick={onClick}>\r\n      {liked ? <LikedIcon size=\"32px\" /> : <GrFavorite size=\"32px\" />}\r\n      {likes} likes!\r\n    </Button>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\nimport { fadeIn } from \"../../styles/animation\";\r\n\r\nexport const Article = styled.article`\r\n  min-height: 200px;\r\n`;\r\n\r\nexport const ImgWrapper = styled.div`\r\n  width: 100%;\r\n  height: 0;\r\n  display: block;\r\n  position: relative;\r\n  padding: 56.25% 0 0 0;\r\n`;\r\n\r\nexport const Img = styled.img`\r\n  ${fadeIn({ time: \"0.5s\" })}\r\n  position: absolute;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  box-shadow: 0 10px 14px rgba(0, 0, 0, 0.2);\r\n  object-fit: cover;\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport { AppContext } from \"../../AppContext\";\r\nimport { NavLink, useNavigate } from \"react-router-dom\";\r\nimport { useNearScreen } from \"../../hooks/useNearScreen\";\r\nimport { useMutationToggleLike } from \"../../hooks/useMutationToggleLike\";\r\nimport { FavButton } from \"../FavButton\";\r\nimport { Img, ImgWrapper, Article } from \"./styles\";\r\n\r\nconst DEFAULT_IMAGE =\r\n  \"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/65761296352685.5eac4787a4720.jpg\";\r\n\r\nexport const PhotoCard = ({ id, liked, likes = 0, src = DEFAULT_IMAGE }) => {\r\n  const { isAuth } = useContext(AppContext);\r\n  const navigate = useNavigate();\r\n  const [show, element] = useNearScreen();\r\n  const { mutation } = useMutationToggleLike();\r\n\r\n  const handleFavClick = () => {\r\n    if (!isAuth) return navigate(\"/register\");\r\n    mutation({\r\n      variables: {\r\n        input: { id },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Article ref={element}>\r\n      {show && (\r\n        <>\r\n          <NavLink to={`/detail/${id}`}>\r\n            <ImgWrapper>\r\n              <Img src={src} />\r\n            </ImgWrapper>\r\n          </NavLink>\r\n\r\n          <FavButton liked={liked} likes={likes} onClick={handleFavClick} />\r\n        </>\r\n      )}\r\n    </Article>\r\n  );\r\n};\r\n","import { useEffect, useState, useRef } from \"react\";\r\n\r\nexport const useNearScreen = () => {\r\n  const [show, setShow] = useState(false);\r\n  const element = useRef(null);\r\n\r\n  useEffect(() => {\r\n    Promise.resolve(\r\n      typeof IntersectionObserver !== undefined\r\n        ? IntersectionObserver\r\n        : import(\"intersection-observer\")\r\n    ).then(() => {\r\n      const observer = new IntersectionObserver((entries) => {\r\n        const { isIntersecting } = entries[0];\r\n        if (isIntersecting) {\r\n          setShow(true);\r\n          observer.disconnect();\r\n        }\r\n      });\r\n      observer.observe(element.current);\r\n    });\r\n  }, [element]);\r\n\r\n  return [show, element];\r\n};\r\n","import styled from \"styled-components\";\r\nimport { NavLink as LinkRouter } from \"react-router-dom\";\r\nimport { fadeIn } from \"../../styles/animation\";\r\n\r\nexport const NavLink = styled(LinkRouter)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  width: 75px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  ${fadeIn({ time: \"0.5s\" })}\r\n  border: 1px solid #ddd;\r\n  box-shadow: 0px 10px 14px rgba(0, 0, 0, 0.2);\r\n  border-radius: 50%;\r\n  height: auto;\r\n  overflow: hidden;\r\n  object-fit: cover;\r\n  width: 75px;\r\n  height: 75px;\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink, Image } from \"./styles\";\r\n\r\nconst DEFAULT_IMAGE = \"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/65761296352685.5eac4787a4720.jpg\";\r\n\r\nexport const Category = ({\r\n  cover = DEFAULT_IMAGE,\r\n  path,\r\n  emoji = \"?\",\r\n  name,\r\n}) => (\r\n  <NavLink to={`/pet/${path}`}>\r\n    <Image src={cover} alt={name} />\r\n    {emoji}\r\n  </NavLink>\r\n);\r\n","import styled, { css } from \"styled-components\";\r\nimport { fadeIn } from '../../styles/animation'\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  width: 100%;\r\n  overflow: auto;\r\n  margin-bottom: 1.5rem;\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n  ${props => props.fixed && css`\r\n    {\r\n      ${fadeIn({time: '.3s'})}\r\n      background: #fff;\r\n      border-radius: 60px;\r\n      box-shadow: 0 0 20px rgba(0, 0, 0, 0.3);\r\n      left: 0;\r\n      margin: 0 auto;\r\n      max-width: 400px;\r\n      padding: 5px;\r\n      position: fixed;\r\n      right: 0;\r\n      top: -20px;\r\n      transform: scale(0.6);\r\n      z-index: 10;\r\n    }\r\n  `}\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  padding: 0 8px;\r\n`;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useFetch } from \"../../hooks/useFetch\";\r\nimport { Category } from \"../Category\";\r\nimport { List, Item } from \"./styles\";\r\n\r\nconst url =\r\n  \"https://petgram-server-daxter-ivf8j1no5-daxtergd.vercel.app/categories\";\r\n\r\nconst ListOfCategoriesComponent = () => {\r\n  const { data: categories, loading } = useFetch(url);\r\n  const [showFixed, setShowFixed] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const onScroll = (e) => {\r\n      const newShowFixed = window.scrollY > 200;\r\n      showFixed !== newShowFixed && setShowFixed(newShowFixed);\r\n    };\r\n\r\n    document.addEventListener(\"scroll\", onScroll);\r\n\r\n    return () => document.removeEventListener(\"scroll\", onScroll);\r\n  }, [showFixed]);\r\n\r\n  const renderList = (fixed) => (\r\n    <List fixed={fixed}>\r\n      {loading ? (\r\n        <Item key={loading}>\r\n          <Category emoji={\"Cargando...\"} />\r\n        </Item>\r\n      ) : (\r\n        categories.map((category) => (\r\n          <Item key={category.id}>\r\n            <Category {...category} path={category.id} />\r\n          </Item>\r\n        ))\r\n      )}\r\n    </List>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {renderList()}\r\n      {showFixed && renderList(true)}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const ListOfCategories = React.memo(ListOfCategoriesComponent);\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetch = (url) => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    fetch(url)\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        setData(response);\r\n        setLoading(false);\r\n      });\r\n  }, []);\r\n\r\n  return { data, loading };\r\n};\r\n","import React from \"react\";\r\nimport { useGetPhotos } from \"../../hooks/useGetPhotos\";\r\nimport { List, Item } from \"./styles\";\r\nimport { PhotoCard } from \"../PhotoCard\";\r\n\r\nexport const ListOfPhotoCards = ({ categoryId }) => {\r\n  const { loading, error, data } = useGetPhotos(categoryId);\r\n\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  return (\r\n    <List>\r\n      {loading ? (\r\n        <Item key={loading}>\r\n          <PhotoCard />\r\n        </Item>\r\n      ) : (\r\n        data.photos.map((photo) => (\r\n          <Item key={photo.id}>\r\n            <PhotoCard {...photo} />\r\n          </Item>\r\n        ))\r\n      )}\r\n    </List>\r\n  );\r\n};\r\n","import { useQuery, gql } from \"@apollo/client\";\r\n\r\nexport const useGetPhotos = (categoryId) => {\r\n  const GET_PHOTOS = gql`\r\n    query getPhotos($categoryId: ID) {\r\n      photos(categoryId: $categoryId) {\r\n        id\r\n        categoryId\r\n        src\r\n        likes\r\n        userId\r\n        liked\r\n      }\r\n    }\r\n  `;\r\n\r\n  const { loading, error, data } = useQuery(GET_PHOTOS, {\r\n    variables: { categoryId },\r\n  });\r\n\r\n  return { loading, error, data };\r\n};\r\n","import React from \"react\";\r\nimport { HelmetLayout } from \"../components/HelmetLayout\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { PageTitle } from \"../components/PageTitle\";\r\nimport { ListOfCategories } from \"../components/ListOfCategories\";\r\nimport { ListOfPhotoCards } from \"../components/ListOfPhotoCards\";\r\n\r\nconst HomePage = () => {\r\n  const params = useParams();\r\n\r\n  return (\r\n    <HelmetLayout\r\n      title=\"Home\"\r\n      description=\"AquÃ­ encontrarÃ¡s fotos de tus mascotas favoritas\"\r\n    >\r\n      <ListOfCategories />\r\n      <PageTitle content=\"Fotos\" />\r\n      <ListOfPhotoCards categoryId={params.id} />\r\n    </HelmetLayout>\r\n  );\r\n};\r\n\r\nconst Home = React.memo(HomePage, (prevProps, props) => {\r\n  return prevProps.categoryId == props.categoryId;\r\n});\r\n\r\nexport default Home;\r\n"],"names":["HelmetLayout","children","title","description","name","content","List","styled","Item","Title","PageTitle","LIKE_PHOTO","gql","Button","LikedIcon","MdFavorite","fadeIn","time","FavButton","liked","likes","onClick","size","Article","ImgWrapper","Img","PhotoCard","id","src","isAuth","useContext","AppContext","navigate","useNavigate","useState","show","setShow","element","useRef","useEffect","Promise","resolve","undefined","IntersectionObserver","then","observer","entries","isIntersecting","disconnect","observe","current","useNearScreen","useMutation","mutation","mutationLoading","loading","mutationError","error","useMutationToggleLike","ref","to","variables","input","NavLink","LinkRouter","Image","Category","cover","path","emoji","alt","props","fixed","css","ListOfCategoriesComponent","url","data","setData","setLoading","fetch","response","json","useFetch","categories","showFixed","setShowFixed","onScroll","e","newShowFixed","window","scrollY","document","addEventListener","removeEventListener","renderList","key","map","category","ListOfCategories","React","ListOfPhotoCards","categoryId","GET_PHOTOS","useQuery","message","photos","photo","HomePage","params","useParams","prevProps"],"sourceRoot":""}