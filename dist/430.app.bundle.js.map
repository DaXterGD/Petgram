{"version":3,"file":"430.app.bundle.js","mappings":"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","sources":["webpack://curso-platzi-react-avanzado/./src/components/HelmetLayout/index.js","webpack://curso-platzi-react-avanzado/./src/components/PageTitle/styles.js","webpack://curso-platzi-react-avanzado/./src/components/PageTitle/index.js","webpack://curso-platzi-react-avanzado/./src/hooks/useGetFavorites.js","webpack://curso-platzi-react-avanzado/./src/components/ListOfFavs/styles.js","webpack://curso-platzi-react-avanzado/./src/components/ListOfFavs/index.js","webpack://curso-platzi-react-avanzado/./src/pages/Favs.js","webpack://curso-platzi-react-avanzado/./node_modules/@apollo/client/react/hooks/useQuery.js"],"sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nexport const HelmetLayout = ({ children, title, description }) => {\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        {title && <title>Petgram ðŸ¦Š | {title}</title>}\r\n        {description && <meta name=\"description\" content={description} />}\r\n      </Helmet>\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n  width: 80%;\r\n  margin: 0 auto .5rem;\r\n`;\r\n","import React from \"react\";\r\nimport { Title } from \"./styles\";\r\n\r\nexport const PageTitle = ({ content }) => {\r\n  return <Title>{content}</Title>;\r\n};\r\n","import { useQuery, gql } from \"@apollo/client\";\r\n\r\nconst GET_FAVORITES = gql`\r\nquery getFavs {\r\n    favs {\r\n      id\r\n      categoryId\r\n      src\r\n      likes\r\n      userId\r\n    }\r\n  }\r\n`;\r\n\r\nexport const useGetFavorites = () => {\r\n  const { data, error, loading } = useQuery(GET_FAVORITES, {\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n  \r\n  return { data, loading, error };\r\n};\r\n","import styled from \"styled-components\";\r\nimport { NavLink as Link } from \"react-router-dom\";\r\nimport { fadeIn } from \"../../styles/animation\";\r\n\r\nexport const NavLink = styled(Link)`\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);\r\n  display: inline-block;\r\n  margin: 1%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 31.33%;\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    padding-bottom: 100%;\r\n  }\r\n`;\r\n\r\nexport const Placeholer = styled.div`\r\n  border-radius: 8px;\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.3);\r\n  display: inline-block;\r\n  margin: 1%;\r\n  overflow: hidden;\r\n  position: relative;\r\n  width: 31.33%;\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    padding-bottom: 100%;\r\n  }\r\n`;\r\n\r\nexport const Grid = styled.div`\r\n  padding-top: 32px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  ${fadeIn({ time: \"0.5s\" })}\r\n  object-fit: cover;\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n`;\r\n","import React from \"react\";\r\nimport { useGetFavorites } from \"../../hooks/useGetFavorites\";\r\nimport { NavLink, Grid, Image, Placeholer } from \"./styles\";\r\n\r\nconst DEFAULT_IMAGE =\r\n  \"https://mir-s3-cdn-cf.behance.net/project_modules/max_1200/65761296352685.5eac4787a4720.jpg\";\r\n\r\nexport const ListOfFavs = () => {\r\n  const { data, loading, error } = useGetFavorites();\r\n\r\n  if (error) return `Error! ${error.message}`;\r\n\r\n  return (\r\n    <Grid>\r\n      {loading ? (\r\n        <Placeholer key={loading}>\r\n          <Image src={DEFAULT_IMAGE} />\r\n        </Placeholer>\r\n      ) : (\r\n        data.favs.map((fav) => (\r\n          <NavLink key={fav.id} to={`/detail/${fav.id}`}>\r\n            <Image src={fav.src} />\r\n          </NavLink>\r\n        ))\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HelmetLayout } from \"../components/HelmetLayout\";\r\nimport { ListOfFavs } from \"../components/ListOfFavs\";\r\nimport { PageTitle } from \"../components/PageTitle\";\r\n\r\nconst Favs = () => {\r\n  return (\r\n    <HelmetLayout title=\"Tus favoritos\" description=\"AquÃ­ verÃ¡s tus favoritos\">\r\n      <PageTitle content=\"Favoritos\" />\r\n      <ListOfFavs />\r\n    </HelmetLayout>\r\n  );\r\n};\r\n\r\nexport default Favs;\r\n","import { __assign, __rest } from \"tslib\";\nimport { useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport { equal } from '@wry/equality';\nimport { mergeOptions } from \"../../core/index.js\";\nimport { getApolloContext } from \"../context/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { NetworkStatus, } from \"../../core/index.js\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useQuery(query, options) {\n    var _a;\n    var context = useContext(getApolloContext());\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    var defaultWatchQueryOptions = client.defaultOptions.watchQuery;\n    verifyDocumentType(query, DocumentType.Query);\n    var _b = useState(function () {\n        var watchQueryOptions = createWatchQueryOptions(query, options, defaultWatchQueryOptions);\n        var obsQuery = null;\n        if (context.renderPromises) {\n            obsQuery = context.renderPromises.getSSRObservable(watchQueryOptions);\n        }\n        if (!obsQuery) {\n            obsQuery = client.watchQuery(watchQueryOptions);\n            if (context.renderPromises) {\n                context.renderPromises.registerSSRObservable(obsQuery, watchQueryOptions);\n            }\n        }\n        if (context.renderPromises &&\n            (options === null || options === void 0 ? void 0 : options.ssr) !== false &&\n            !(options === null || options === void 0 ? void 0 : options.skip) &&\n            obsQuery.getCurrentResult().loading) {\n            context.renderPromises.addQueryPromise({\n                getOptions: function () { return createWatchQueryOptions(query, options, defaultWatchQueryOptions); },\n                fetchData: function () { return new Promise(function (resolve) {\n                    var sub = obsQuery.subscribe({\n                        next: function (result) {\n                            if (!result.loading) {\n                                resolve();\n                                sub.unsubscribe();\n                            }\n                        },\n                        error: function () {\n                            resolve();\n                            sub.unsubscribe();\n                        },\n                        complete: function () {\n                            resolve();\n                        },\n                    });\n                }); },\n            }, function () { return null; });\n        }\n        return obsQuery;\n    }), obsQuery = _b[0], setObsQuery = _b[1];\n    var _c = useState(function () {\n        var _a, _b;\n        var result = obsQuery.getCurrentResult();\n        if (!result.loading && options) {\n            if (result.error) {\n                (_a = options.onError) === null || _a === void 0 ? void 0 : _a.call(options, result.error);\n            }\n            else if (result.data) {\n                (_b = options.onCompleted) === null || _b === void 0 ? void 0 : _b.call(options, result.data);\n            }\n        }\n        return result;\n    }), result = _c[0], setResult = _c[1];\n    var ref = useRef({\n        client: client,\n        query: query,\n        options: options,\n        result: result,\n        previousData: void 0,\n        watchQueryOptions: createWatchQueryOptions(query, options, defaultWatchQueryOptions),\n    });\n    useEffect(function () {\n        var _a, _b;\n        var watchQueryOptions = createWatchQueryOptions(query, options, defaultWatchQueryOptions);\n        var nextResult;\n        if (ref.current.client !== client || !equal(ref.current.query, query)) {\n            var obsQuery_1 = client.watchQuery(watchQueryOptions);\n            setObsQuery(obsQuery_1);\n            nextResult = obsQuery_1.getCurrentResult();\n        }\n        else if (!equal(ref.current.watchQueryOptions, watchQueryOptions)) {\n            obsQuery.setOptions(watchQueryOptions).catch(function () { });\n            nextResult = obsQuery.getCurrentResult();\n            ref.current.watchQueryOptions = watchQueryOptions;\n        }\n        if (nextResult) {\n            var previousResult = ref.current.result;\n            if (previousResult.data) {\n                ref.current.previousData = previousResult.data;\n            }\n            setResult(ref.current.result = nextResult);\n            if (!nextResult.loading && options) {\n                if (nextResult.error) {\n                    (_a = options.onError) === null || _a === void 0 ? void 0 : _a.call(options, nextResult.error);\n                }\n                else if (nextResult.data) {\n                    (_b = options.onCompleted) === null || _b === void 0 ? void 0 : _b.call(options, nextResult.data);\n                }\n            }\n        }\n        Object.assign(ref.current, { client: client, query: query });\n    }, [obsQuery, client, query, options]);\n    useEffect(function () {\n        if (context.renderPromises) {\n            return;\n        }\n        var subscription = obsQuery.subscribe(onNext, onError);\n        function onNext() {\n            var _a, _b;\n            var previousResult = ref.current.result;\n            var result = obsQuery.getCurrentResult();\n            if (previousResult &&\n                previousResult.loading === result.loading &&\n                previousResult.networkStatus === result.networkStatus &&\n                equal(previousResult.data, result.data)) {\n                return;\n            }\n            if (previousResult.data) {\n                ref.current.previousData = previousResult.data;\n            }\n            setResult(ref.current.result = result);\n            if (!result.loading) {\n                (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onCompleted) === null || _b === void 0 ? void 0 : _b.call(_a, result.data);\n            }\n        }\n        function onError(error) {\n            var _a, _b;\n            var last = obsQuery[\"last\"];\n            subscription.unsubscribe();\n            try {\n                obsQuery.resetLastResults();\n                subscription = obsQuery.subscribe(onNext, onError);\n            }\n            finally {\n                obsQuery[\"last\"] = last;\n            }\n            if (!error.hasOwnProperty('graphQLErrors')) {\n                throw error;\n            }\n            var previousResult = ref.current.result;\n            if ((previousResult && previousResult.loading) ||\n                !equal(error, previousResult.error)) {\n                setResult(ref.current.result = {\n                    data: previousResult.data,\n                    error: error,\n                    loading: false,\n                    networkStatus: NetworkStatus.error,\n                });\n                (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError) === null || _b === void 0 ? void 0 : _b.call(_a, error);\n            }\n        }\n        return function () { return subscription.unsubscribe(); };\n    }, [obsQuery, context.renderPromises, client.disableNetworkFetches]);\n    var partial;\n    (_a = result, partial = _a.partial, result = __rest(_a, [\"partial\"]));\n    {\n        if (partial &&\n            (options === null || options === void 0 ? void 0 : options.partialRefetch) &&\n            !result.loading &&\n            (!result.data || Object.keys(result.data).length === 0) &&\n            obsQuery.options.fetchPolicy !== 'cache-only') {\n            result = __assign(__assign({}, result), { loading: true, networkStatus: NetworkStatus.refetch });\n            obsQuery.refetch();\n        }\n        if (context.renderPromises &&\n            (options === null || options === void 0 ? void 0 : options.ssr) !== false &&\n            !(options === null || options === void 0 ? void 0 : options.skip) &&\n            result.loading) {\n            obsQuery.setOptions(createWatchQueryOptions(query, options, defaultWatchQueryOptions)).catch(function () { });\n        }\n        Object.assign(ref.current, { options: options });\n    }\n    if ((context.renderPromises || client.disableNetworkFetches) &&\n        (options === null || options === void 0 ? void 0 : options.ssr) === false) {\n        result = ref.current.result = {\n            loading: true,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.loading,\n        };\n    }\n    else if ((options === null || options === void 0 ? void 0 : options.skip) || (options === null || options === void 0 ? void 0 : options.fetchPolicy) === 'standby') {\n        result = {\n            loading: false,\n            data: void 0,\n            error: void 0,\n            networkStatus: NetworkStatus.ready,\n        };\n    }\n    if (result.errors && result.errors.length) {\n        result = __assign(__assign({}, result), { error: result.error || new ApolloError({ graphQLErrors: result.errors }) });\n    }\n    var obsQueryFields = useMemo(function () { return ({\n        refetch: obsQuery.refetch.bind(obsQuery),\n        fetchMore: obsQuery.fetchMore.bind(obsQuery),\n        updateQuery: obsQuery.updateQuery.bind(obsQuery),\n        startPolling: obsQuery.startPolling.bind(obsQuery),\n        stopPolling: obsQuery.stopPolling.bind(obsQuery),\n        subscribeToMore: obsQuery.subscribeToMore.bind(obsQuery),\n    }); }, [obsQuery]);\n    return __assign(__assign(__assign({}, obsQueryFields), { variables: createWatchQueryOptions(query, options, defaultWatchQueryOptions).variables, client: client, called: true, previousData: ref.current.previousData }), result);\n}\nfunction createWatchQueryOptions(query, options, defaultOptions) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var skip = options.skip, ssr = options.ssr, onCompleted = options.onCompleted, onError = options.onError, displayName = options.displayName, otherOptions = __rest(options, [\"skip\", \"ssr\", \"onCompleted\", \"onError\", \"displayName\"]);\n    var watchQueryOptions = __assign({ query: query }, otherOptions);\n    if (defaultOptions) {\n        watchQueryOptions = mergeOptions(defaultOptions, watchQueryOptions);\n    }\n    if (skip) {\n        watchQueryOptions.fetchPolicy = 'standby';\n    }\n    else if (((_a = watchQueryOptions.context) === null || _a === void 0 ? void 0 : _a.renderPromises) &&\n        (watchQueryOptions.fetchPolicy === 'network-only' ||\n            watchQueryOptions.fetchPolicy === 'cache-and-network')) {\n        watchQueryOptions.fetchPolicy = 'cache-first';\n    }\n    else if (!watchQueryOptions.fetchPolicy) {\n        watchQueryOptions.fetchPolicy = 'cache-first';\n    }\n    if (!watchQueryOptions.variables) {\n        watchQueryOptions.variables = {};\n    }\n    return watchQueryOptions;\n}\n//# sourceMappingURL=useQuery.js.map"],"names":["HelmetLayout","children","title","description","name","content","Title","styled","PageTitle","GET_FAVORITES","gql","NavLink","Link","Placeholer","Grid","Image","fadeIn","time","ListOfFavs","useQuery","fetchPolicy","data","error","loading","useGetFavorites","message","key","src","favs","map","fav","id","to","query","options","_a","context","useContext","client","defaultWatchQueryOptions","defaultOptions","watchQuery","partial","_b","useState","watchQueryOptions","createWatchQueryOptions","obsQuery","renderPromises","getSSRObservable","registerSSRObservable","ssr","skip","getCurrentResult","addQueryPromise","getOptions","fetchData","Promise","resolve","sub","subscribe","next","result","unsubscribe","complete","setObsQuery","_c","onError","call","onCompleted","setResult","ref","useRef","previousData","useEffect","nextResult","current","setOptions","catch","obsQuery_1","previousResult","Object","assign","subscription","onNext","last","resetLastResults","hasOwnProperty","networkStatus","disableNetworkFetches","partialRefetch","keys","length","refetch","errors","graphQLErrors","obsQueryFields","useMemo","bind","fetchMore","updateQuery","startPolling","stopPolling","subscribeToMore","variables","called","otherOptions","displayName"],"sourceRoot":""}